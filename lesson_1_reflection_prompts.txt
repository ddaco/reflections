How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    Instead of looking at the numerous lines of code I was focused only on few so it was much easier to find diff.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    You can easily see which part of code did you change/delete, not to repeat the same mistakes in future.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pros - you don't have a bunch of unnecessary saved files, history is "cleaner"
	Cons - it may happen that you forget push commit so you are missing one step

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    To have all dependent files from the same time - easier for comparing?!

How can you use the commands git log and git diff to view the history of files?

    git log --stat   -> show a list of the recent commits with information about them, including commit IDs, --stat gives statistics about which files have changed in each commit 
	git diff -u file1 file2 -> unified (-u) gives more convenient output

How might using version control make you more confident to make changes that
could break something?

    It is much easier to make some changes in code when you know that you can always get back on commit where everything worked well.

Now that you have your workspace set up, what do you want to try using Git for?

    For my app developing.
