What happens when you initialize a repository? Why do you need to do it?
Then .git repository is created. You need it in order to track history of files.

How is the staging area different from the working directory and the repository?
What value do you think it offers?
You cannot see it, only check status with command "git status". It offers one check before and to include in what will be commited.

How can you use the staging area to make sure you have one commit per logical
change?
Before you make a commit, you can use command "git diff" in order to check if file located in staging area contains only one logical change. 

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
When you are trying to build some new feature but you are not so sure how it needs to look and you need to experiment. Then you make a branch 
and that way you are not touching the original code.  

How do the diagrams help you visualize the branch structure?
When I see diagram it is more easier to realize which commit is not seen for each branch and which is seen. That way is much easier to understand concepts of branches in git.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?
Result is one branch with commits from both branches. Because it gives simple understanding what command merge does.

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?
Pros: simpler
Cons: merge conflicts may be introduced